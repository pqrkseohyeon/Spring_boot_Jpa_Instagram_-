package com.cos.instagram.controller;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.cos.instagram.model.User;
import com.cos.instagram.repository.FollowRepository;
import com.cos.instagram.repository.UserRepository;
import com.cos.instagram.service.MyUserDetail;

@Controller
public class UserController {
	
	private static final Logger log = LoggerFactory.getLogger(UserController.class);
	
	@Autowired
	private BCryptPasswordEncoder encoder;
	
	@Autowired
	private UserRepository mUserRepository;
	
	@Autowired
	private FollowRepository mFollowRepository;
	
	// 로그인 창으로
	@GetMapping("auth/login")
	public String authLogin() {
		return "auth/login";
	}
	
	//회원가입 창으로
	@GetMapping("auth/join")
	public String authJoin() {
		return "auth/join";
	}
	
	// 회원가입 join.jsp 에서 form action = /auth/joinProc 타고 넘어온다.
	@PostMapping("/auth/joinProc")
	public String authJoinProc(User user) {
		String rawPassword = user.getPassword();
		String encPassword = encoder.encode(rawPassword);
		user.setPassword(encPassword);
		log.info("rawPassword : "+rawPassword);
		log.info("encPassword : "+encPassword);
		
		mUserRepository.save(user);
		
		return "redirect:/auth/login";	
	}
	
	
	
	@GetMapping("/user/{id}")
	public String profile(@PathVariable int id,
						  @AuthenticationPrincipal MyUserDetail userDetail, Model model) {
		//id를 통해서 해당 유저를 검색(이미지 + 유저정보)
		/*
		 * 1. imageCount
		 * 2.followerCount
		 * 3.followingcount
		 * 4.User 오브젝트(Image (likeCount) 컬렉션)
		 * 5.followCheck 팔로우 유무(1 팔로우중, 1이 아니면 언팔로우)
		 */
		
		//5번
		User user = userDetail.getUser();
		
		int followCheck = mFollowRepository.countByFromUserIdAndToUserId(user.getId(), id);
		log.info("followCheck : "+followCheck);
		model.addAttribute("followCheck",followCheck);
		return "user/profile";
	}
	

}
